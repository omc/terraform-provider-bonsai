# Terraform Provider testing workflow.
name: Tests

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  pull_request:
    paths-ignore:
      - 'README.md'
  push:
    paths-ignore:
      - 'README.md'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  GOPRIVATE: github.com/omc

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4.1.5
      - uses: actions/setup-go@v5.0.1
        with:
          go-version-file: 'go.mod'
          cache: true
      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: "3.x"
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4.1.5
      - name: Add SSH Go Module Private Key
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add - <<< "${{ secrets.GO_MODULE_PRIVATE_KEY }}"
          echo "SSH_AUTH_SOCK=$SSH_AUTH_SOCK" >> $GITHUB_ENV
      - name: Setup access for private go modules
        run: |
          git config --global url."ssh://git@github.com/".insteadOf https://github.com/
      - run: go mod download
      - name: Build
        run: task build
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@82d40c283aeb1f2b6595839195e95c2d6a49081b # v5.0.0
        with:
          version: latest

  flakey-lint:
    name: Flakey Lint
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4.1.5
      - uses: actions/setup-go@v5.0.1
        with:
          go-version: '1.22'
          cache: true
      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: "3.x"
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4.1.5
      - name: Add SSH Go Module Private Key
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add - <<< "${{ secrets.GO_MODULE_PRIVATE_KEY }}"
          echo "SSH_AUTH_SOCK=$SSH_AUTH_SOCK" >> $GITHUB_ENV
      - name: Setup access for private go modules
        run: |
          git config --global url."ssh://git@github.com/".insteadOf https://github.com/
      - run: go mod download
      - name: Run additional linters - tfproviderlint is flakey on go >=1.22.0
        run: task lint
  # source: https://github.com/vercel/terraform-provider-vercel
  # source license: MPL-2.0
  docs:
    name: Docs Test
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5.0.1
        with:
          go-version: "1.22"
        id: go
      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: "3.x"
      - name: Add SSH Go Module Private Key
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add - <<< "${{ secrets.GO_MODULE_PRIVATE_KEY }}"
          echo "SSH_AUTH_SOCK=$SSH_AUTH_SOCK" >> $GITHUB_ENV
      - name: Setup access for private go modules
        run: |
          git config --global url."ssh://git@github.com/".insteadOf https://github.com/
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4.1.5
      - name: Check if docs are up-to-date
        run: |
          task docs
          git diff
          BADDOCS=$(git status --porcelain)
          test -z "$BADDOCS" || (echo -e "documentation needs regenerating using task docs: $BADDOCS"; exit 1)

  # Run acceptance tests in a matrix with Terraform CLI versions
  test:
    name: Terraform Provider Acceptance Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      # Current Bonsai dev account is limited to the number of sandbox items
      # which can be created.
      max-parallel: 1
      matrix:
        include:
          - tool: opentofu
            version: v1.6.x
          - tool: opentofu
            version: v1.7.x
          - tool: terraform
            version: v1.7.*
          - tool: terraform
            version: v1.8.*
          - tool: terraform
            version: v1.9.*

    steps:
      - uses: actions/checkout@v4.1.5
      - uses: actions/setup-go@v5.0.1
        with:
          go-version-file: 'go.mod'
          cache: true
      - if: matrix.tool == 'terraform'
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ matrix.version }}
          terraform_wrapper: false

      - if: matrix.tool == 'opentofu'
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: ${{ matrix.version }}
          tofu_wrapper: false
      - name: Add SSH Go Module Private Key
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add - <<< "${{ secrets.GO_MODULE_PRIVATE_KEY }}"
          echo "SSH_AUTH_SOCK=$SSH_AUTH_SOCK" >> $GITHUB_ENV
      - name: Setup access for private go modules
        run: |
          git config --global url."ssh://git@github.com/".insteadOf https://github.com/
      - run: go mod download
      - env:
          TF_ACC: "1"
          TF_LOG: "INFO"
          BONSAI_API_KEY: ${{ secrets.BONSAI_API_KEY }}
          BONSAI_API_TOKEN: ${{ secrets.BONSAI_API_TOKEN }}
        run: go test -v -cover ./internal/...
        timeout-minutes: 10
